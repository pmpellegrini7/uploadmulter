{"version":3,"sources":["components/Upload.js","App.js","index.js"],"names":["Upload","useState","profileImg","setProfileImg","users","setUsers","getUsers","a","axios","get","res","data","useEffect","className","Form","onSubmit","e","preventDefault","formData","FormData","append","post","then","console","log","File","id","custom","Input","isValid","onChange","target","files","Label","data-browse","Button","type","block","map","user","key","_id","src","alt","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yPAuDeA,EAnDA,WAAO,IAAD,EAEmBC,mBAAS,IAF5B,mBAEVC,EAFU,KAEEC,EAFF,OAGSF,mBAAS,IAHlB,mBAGVG,EAHU,KAGHC,EAHG,cAoBFC,IApBE,2EAoBjB,4BAAAC,EAAA,sEACsBC,IAAMC,IAAI,OADhC,OACUC,EADV,OAEIL,EAASK,EAAIC,KAAKP,OAFtB,4CApBiB,sBA6BjB,OAJAQ,qBAAU,WACNN,MACD,IAGC,yBAAKO,UAAU,wBACX,wBAAIA,UAAU,oBAAd,4BACA,kBAACC,EAAA,EAAD,CAAMC,SAvBG,SAAAC,GACbA,EAAEC,iBACF,IAAMC,EAAW,IAAIC,SACrBD,EAASE,OAAO,aAAclB,GAC9BM,IAAMa,KAAK,mBAAoBH,EAAU,IACtCI,MAAK,SAAAZ,GACJa,QAAQC,IAAId,MAEhBJ,MAgBQ,yBAAKO,UAAU,QACX,kBAACC,EAAA,EAAKW,KAAN,CAAWC,GAAG,uBAAuBC,QAAM,GACvC,kBAACb,EAAA,EAAKW,KAAKG,MAAX,CAAiBC,SAAO,EAACC,SA9BxB,SAAAd,GACjBb,EAAca,EAAEe,OAAOC,MAAM,OA8Bb,kBAAClB,EAAA,EAAKW,KAAKQ,MAAX,CAAiBC,cAAY,gBAA7B,oBAIJ,kBAACC,EAAA,EAAD,CAAQtB,UAAU,mBAAmBuB,KAAK,SAASC,OAAK,GAAxD,gCAIPjC,EAAMkC,KAAI,SAAAC,GAAI,OACX,yBAAKC,IAAKD,EAAKE,IAAKC,IAAKH,EAAKrC,WAAYyC,IAAKJ,EAAKE,IAAK5B,UAAU,mBCpCpE+B,MARf,WACE,OACE,yBAAK/B,UAAU,aACb,kBAAC,EAAD,QCJNgC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.0e82b5fa.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Form, Button } from 'react-bootstrap'\r\n\r\nconst Upload = () => {\r\n\r\n    const [profileImg, setProfileImg] = useState('');\r\n    const [users, setUsers] = useState([]);\r\n\r\n    const onFileChange = e => {\r\n        setProfileImg(e.target.files[0]);\r\n    }\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n        formData.append('profileImg', profileImg);\r\n        axios.post('api/user-profile', formData, {\r\n        }).then(res => {\r\n            console.log(res);\r\n        })\r\n        getUsers();\r\n    }\r\n\r\n    async function getUsers() {\r\n        const res = await axios.get('api');\r\n        setUsers(res.data.users);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getUsers();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"container-fluid mt-3\">\r\n            <h1 className=\"text-center mb-4\">Upload Images to MongoDB</h1>\r\n            <Form onSubmit={onSubmit}>\r\n                <div className=\"mb-3\">\r\n                    <Form.File id=\"formcheck-api-custom\" custom>\r\n                        <Form.File.Input isValid onChange={onFileChange} />\r\n                        <Form.File.Label data-browse=\"Select Image\">\r\n                            Select Image...\r\n                        </Form.File.Label>\r\n                    </Form.File>\r\n                    <Button className=\"float-right mt-2\" type=\"submit\" block>Upload image to a database</Button>\r\n                </div>\r\n            </Form>\r\n            \r\n            {users.map(user => (\r\n                <img key={user._id} src={user.profileImg} alt={user._id} className=\"w-25 mt-5\"/>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Upload;","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport Upload from './components/Upload';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Upload />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}